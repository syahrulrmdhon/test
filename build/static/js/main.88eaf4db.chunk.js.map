{"version":3,"sources":["components/route_path/RenderPath.js","views/login/login.js","routes/routes.js","views/beranda/beranda.js","components/App/App.js","registerServiceWorker.js","routes/api_host.js","redux-modules/modules/counter.js","redux-modules/modules/user.js","redux-modules/reducers.js","redux-modules/middlewares/clientMiddleware.js","index.js","redux-modules/create.js"],"names":["CustomPropsRoute","_this$props","this","props","Component","component","rest","Object","objectWithoutProperties","react_default","a","createElement","Route","assign","render","Login","className","MainRoutes","path","App","Switch","map","route","key","RenderPath","withRouter","connect","state","dispatch","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","methods","initialState","count","isIncrementing","isDecrementing","SET","RESET","LOAD","LOAD_SUCCESS","LOAD_FAIL","combineReducers","user","arguments","length","undefined","action","type","objectSpread","loading","loaded","result","payload","counter","clientMiddleware","client","_ref","getState","next","promise","types","_types","slicedToArray","REQUEST","SUCCESS","FAILURE","actionPromise","require","DATA","store","middlewares","enhancers","applyMiddleware","apply","createStore","reducers","composeWithDevTools","asyncReducers","configureStore","ApiHost","req","_this","classCallCheck","forEach","method","params","data","headers","files","fields","fallback","isExternal","typeForm","Promise","resolve","reject","request","axios","concat","query","set","file","attach","value","item","field","send","end","err","body","ReactDOM","es","BrowserRouter","components_App_App","initialData","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.88eaf4db.chunk.js","sourcesContent":["import React, { Component } from 'react';\n// import { connect } from 'react-redux';\n\nimport {\n  // Redirect,\n  Route\n} from 'react-router-dom';\n\nclass CustomPropsRoute extends Component {\n  render() {\n    const { component: Component, ...rest } = this.props;\n    // if (this.props.level) {\n    //   if (this.props.level === 1) { // user biasa\n    //     return (\n    //       <Route {...rest} render={props => (\n    //         <Component {...props} initialData={initialData} />\n    //       )} />\n    //     );\n    //   } else if (this.props.level === 2) { // super admin\n    //     return (\n    //       <Route {...rest} render={props => (\n    //         this.props.user && this.props.user.level === 2 ?\n    //           <Component {...props} initialData={initialData} /> :\n    //           <Redirect to={{\n    //             pathname: '/login',\n    //             state: { from: this.props.location }\n    //           }} />\n    //       )} />\n    //     );\n    //   }\n    // }\n    return (\n      <Route {...rest} render={props => {\n        return <Component {...props} />\n      }} />\n    );\n  }\n}\n\n// const mapStateToProps = state => ({\n//   user: state.user\n// })\n\n// export default connect(\n//   mapStateToProps\n// )(CustomPropsRoute)\n\nexport default CustomPropsRoute;","import React, { Component } from 'react'\nimport './../../styles/login.css';\n\nclass Login extends Component {\n    render() {\n        return (\n            <div className=\"login\">\n                Silakan Build Apps Anda\n            </div> \n        )\n    }\n}\nexport default Login;","import { Login } from '../views';\nimport Beranda from '../views/beranda/beranda';\n\nexport const MainRoutes = [\n    {\n        path: '',\n        component: Login\n    },\n    {\n        path: '/',\n        component: Beranda\n    }\n];","import React, { Component } from 'react'\nimport './../../styles/beranda.css';\n\nclass Beranda extends Component {\n    render() {\n        return (\n            <div className=\"beranda\">\n                Silakan Beranda Apps Anda\n            </div> \n        )\n    }\n}\nexport default Beranda;","import React, { Component } from 'react';\nimport { Switch, withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux';\nimport { CustomPropsRoute } from './../../components';\nimport { MainRoutes } from './../../routes/routes';\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <main>\n          <Switch>\n            {MainRoutes.map((route, key) => {\n              return (\n                <CustomPropsRoute {...route} key={key} />\n              )\n            })}\n          </Switch>\n        </main>\n\n      </div>\n    )\n  }\n}\nconst mapStateToProps = state => ({\n  // user: state.login\n});\n\nconst mapDispatchToProps = dispatch => ({\n  // userAction: bindActionCreators(userAction, dispatch)\n});\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App));","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import axios from 'axios';\n// import apiHost from './constant';\nconst methods = ['get', 'post', 'put', 'patch', 'del'];\nconst apiHost = 'localhost:2222'\n\nexport default class ApiHost {\n  constructor(req) {\n    methods.forEach(method => {\n      this[method] = (path, { params, data, headers, files, fields, fallback } = {}, isExternal = true, typeForm = false) => new Promise((resolve, reject) => {\n        let request;\n        if (isExternal) {\n          request = axios[method](`${apiHost}${path}`);\n        } else {\n          request = axios[method](path);\n        }\n        if (params) {\n          request.query(params);\n        }\n\n        if (headers) {\n          request.set(headers);\n        }\n\n        if (files) {\n          files.forEach(file => request.attach(file.key, file.value));\n        }\n\n        if (fields) {\n          fields.forEach(item => request.field(item.key, item.value));\n        }\n\n        if (data) {\n          request.send(data);\n        }\n\n        if (typeForm) {\n          request.type('form');\n        }\n        request.end((err, { body } = {}) => {\n          if (err) {\n            if (fallback) {\n              fallback(err);\n              reject(body || err);\n            } else {\n              reject(body || err);\n            }\n          } else { resolve(body); }\n        });\n      });\n    });\n  }\n}\n","export const INCREMENT_REQUESTED = 'counter/INCREMENT_REQUESTED'\nexport const INCREMENT = 'counter/INCREMENT'\nexport const DECREMENT_REQUESTED = 'counter/DECREMENT_REQUESTED'\nexport const DECREMENT = 'counter/DECREMENT'\n\nconst initialState = {\n  count: 0,\n  isIncrementing: false,\n  isDecrementing: false\n}\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case INCREMENT_REQUESTED:\n      return {\n        ...state,\n        isIncrementing: true\n      }\n\n    case INCREMENT:\n      return {\n        ...state,\n        count: state.count + 1,\n        isIncrementing: !state.isIncrementing\n      }\n\n    case DECREMENT_REQUESTED:\n      return {\n        ...state,\n        isDecrementing: true\n      }\n\n    case DECREMENT:\n      return {\n        ...state,\n        count: state.count - 1,\n        isDecrementing: !state.isDecrementing\n      }\n\n    default:\n      return state\n  }\n}\n\nexport const increment = () => {\n  return dispatch => {\n    dispatch({\n      type: INCREMENT_REQUESTED\n    })\n\n    dispatch({\n      type: INCREMENT\n    })\n  }\n}\n\nexport const incrementAsync = () => {\n  return dispatch => {\n    dispatch({\n      type: INCREMENT_REQUESTED\n    })\n\n    return setTimeout(() => {\n      dispatch({\n        type: INCREMENT\n      })\n    }, 3000)\n  }\n}\n\nexport const decrement = () => {\n  return dispatch => {\n    dispatch({\n      type: DECREMENT_REQUESTED\n    })\n\n    dispatch({\n      type: DECREMENT\n    })\n  }\n}\n\nexport const decrementAsync = () => {\n  return dispatch => {\n    dispatch({\n      type: DECREMENT_REQUESTED\n    })\n\n    return setTimeout(() => {\n      dispatch({\n        type: DECREMENT\n      })\n    }, 3000)\n  }\n}","const SET = 'modules/user/SET';\nconst RESET = 'modules/user/RESET';\nconst LOAD = 'modules/user/LOAD';\nconst LOAD_SUCCESS = 'modules/user/LOAD_SUCCESS';\nconst LOAD_FAIL = 'modules/user/LOAD_FAIL';\n\nconst initialState = null;\n\nexport default function reducer(state = initialState, action) {\n  switch (action.type) {\n    case LOAD:\n      return {\n        ...state,\n        loading: true,\n      }\n    case LOAD_SUCCESS:\n      return {\n        ...state,\n        loaded: true,\n        loading: false,\n        ...action.result\n      }\n    case LOAD_FAIL:\n      return {\n        loaded: true,\n        loading: false,\n        error: action.error\n      }\n    case SET:\n      return { ...state, ...action.payload }\n    case RESET:\n      return { ...initialState }\n    default:\n      return state\n  }\n}\n\nexport function login() {\n  return {\n    types: [LOAD, LOAD_SUCCESS, LOAD_FAIL],\n    promise: client => client.get(`https://jsonplaceholder.typicode.com/posts/`)\n  }\n}\n\nexport function reset() {\n  return {\n    type: RESET\n  }\n}\n\n","import { combineReducers } from 'redux'\nimport counter from './modules/counter'\nimport user from './modules/user'\n\nexport default combineReducers({\n  user,\n  counter\n})\n","export default function clientMiddleware(client) {\n  return ({ dispatch, getState }) => next => action => {\n    if (typeof action === 'function') {\n      return action(dispatch, getState);\n    }\n\n    const { promise, types, ...rest } = action; // eslint-disable-line no-redeclare\n    if (!promise) {\n      return next(action);\n    }\n\n    const [REQUEST, SUCCESS, FAILURE] = types;\n    next({ ...rest, type: REQUEST });\n\n    const actionPromise = promise(client, dispatch);\n    actionPromise.then(\n      result => next({ ...rest, result, type: SUCCESS }),\n      error => next({ ...rest, error, type: FAILURE })\n    ).catch((error) => {\n      console.error('MIDDLEWARE ERROR:', error);\n      next({ ...rest, error, type: FAILURE });\n    });\n\n    return actionPromise;\n  };\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\n// import * as serviceWorker from './serviceWorker';\nimport registerServiceWorker from './registerServiceWorker';\nimport { Provider } from 'react-redux'\nimport { BrowserRouter } from 'react-router-dom'\nimport './styles/style.css';\n\nimport ApiHost from './routes/api_host'\nimport configureStore from './redux-modules/create'\nrequire('typeface-nunito-sans');\n\nvar initialState = \"Gredu Indonesia\"\ninitialState = window.DATA;\nconst client = new ApiHost();\nconst store = configureStore(client, initialState);\n\nReactDOM.render(\n    <Provider store={store}>\n      <BrowserRouter>\n        <App initialData={window.DATA} />\n      </BrowserRouter>\n    </Provider>, document.getElementById('root')\n  );\n  registerServiceWorker();\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n","import {\n  createStore,\n  applyMiddleware,\n  // compose\n} from 'redux'\nimport reducers from './reducers'\nimport clientMiddleware from './middlewares/clientMiddleware';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n//import createLogger from 'redux-logger'\n//import createSagaMiddleware from 'redux-saga'\n\n//const logger = createLogger()\n//const sagaMiddleware = createSagaMiddleware()\n\nexport default function configureStore(client, initialState = {}) {\n  // Create the store with two middlewares\n  const middlewares = [\n    clientMiddleware(client)\n    //  sagaMiddleware\n    //, logger\n  ]\n\n  const enhancers = [\n    applyMiddleware(...middlewares)\n  ]\n\n  const store = createStore(\n    reducers\n    , initialState\n    , composeWithDevTools(...enhancers)\n  )\n\n  // Extensions\n  //store.runSaga = sagaMiddleware.run\n  store.asyncReducers = {} // Async reducer registry\n\n  return store\n}\n"],"sourceRoot":""}