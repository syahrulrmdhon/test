{"ast":null,"code":"import _classCallCheck from \"/Users/user/Documents/On Progress/gredu-v2-fe/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/user/Documents/On Progress/gredu-v2-fe/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/user/Documents/On Progress/gredu-v2-fe/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/user/Documents/On Progress/gredu-v2-fe/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/user/Documents/On Progress/gredu-v2-fe/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport React from 'react';\nimport Utils from '../utils/utils';\nimport Mixins from '../utils/mixins';\nimport __reactComponentDispatchEvent from '../runtime-helpers/react-component-dispatch-event.js';\nimport __reactComponentSlots from '../runtime-helpers/react-component-slots.js';\nimport __reactComponentSetProps from '../runtime-helpers/react-component-set-props.js';\n\nvar F7List =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(F7List, _React$Component);\n\n  function F7List(props, context) {\n    var _this;\n\n    _classCallCheck(this, F7List);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(F7List).call(this, props, context));\n    _this.__reactRefs = {};\n    return _this;\n  }\n\n  _createClass(F7List, [{\n    key: \"onSortableEnable\",\n    value: function onSortableEnable(event) {\n      this.dispatchEvent('sortable:enable sortableEnable', event);\n    }\n  }, {\n    key: \"onSortableDisable\",\n    value: function onSortableDisable(event) {\n      this.dispatchEvent('sortable:disable sortableDisable', event);\n    }\n  }, {\n    key: \"onSortableSort\",\n    value: function onSortableSort(event) {\n      var sortData = event.detail;\n      this.dispatchEvent('sortable:sort sortableSort', event, sortData);\n    }\n  }, {\n    key: \"onTabShow\",\n    value: function onTabShow(event) {\n      this.dispatchEvent('tab:show tabShow', event);\n    }\n  }, {\n    key: \"onTabHide\",\n    value: function onTabHide(event) {\n      this.dispatchEvent('tab:hide tabHide', event);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var self = this;\n      var props = self.props;\n      var id = props.id,\n          style = props.style,\n          form = props.form;\n      var _self$slots = self.slots,\n          slotsList = _self$slots.list,\n          slotsDefault = _self$slots.default;\n      var rootChildrenBeforeList = [];\n      var rootChildrenAfterList = [];\n      var ulChildren = slotsList || [];\n      var flattenSlots = Utils.flattenArray(slotsDefault);\n      var wasUlChild = false;\n      flattenSlots.forEach(function (child) {\n        if (typeof child === 'undefined') return;\n        var tag;\n        {\n          tag = child.type && (child.type.displayName || child.type.name);\n\n          if (!tag && typeof child.type === 'string') {\n            tag = child.type;\n          }\n        }\n\n        if (!tag && 'react' === 'react' || tag && !(tag === 'li' || tag === 'F7ListItem' || tag === 'F7ListButton' || tag === 'F7ListInput' || tag.indexOf('list-item') >= 0 || tag.indexOf('list-button') >= 0 || tag.indexOf('list-input') >= 0 || tag.indexOf('f7-list-item') >= 0 || tag.indexOf('f7-list-button') >= 0 || tag.indexOf('f7-list-input') >= 0)) {\n          if (wasUlChild) rootChildrenAfterList.push(child);else rootChildrenBeforeList.push(child);\n        } else if (tag) {\n          wasUlChild = true;\n          ulChildren.push(child);\n        }\n      });\n      var ListTag = form ? 'form' : 'div';\n\n      if (ulChildren.length > 0) {\n        return React.createElement(ListTag, {\n          id: id,\n          ref: function ref(__reactNode) {\n            _this2.__reactRefs['el'] = __reactNode;\n          },\n          style: style,\n          className: self.classes\n        }, self.slots['before-list'], rootChildrenBeforeList, React.createElement('ul', null, ulChildren), self.slots['after-list'], rootChildrenAfterList);\n      } else {\n        return React.createElement(ListTag, {\n          id: id,\n          ref: function ref(__reactNode) {\n            _this2.__reactRefs['el'] = __reactNode;\n          },\n          style: style,\n          className: self.classes\n        }, self.slots['before-list'], rootChildrenBeforeList, self.slots['after-list'], rootChildrenAfterList);\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var self = this;\n      var el = self.refs.el;\n      var _self$props = self.props,\n          virtualList = _self$props.virtualList,\n          virtualListParams = _self$props.virtualListParams;\n\n      if (el) {\n        self.onSortableEnableBound = self.onSortableEnable.bind(self);\n        self.onSortableDisableBound = self.onSortableDisable.bind(self);\n        self.onSortableSortBound = self.onSortableSort.bind(self);\n        self.onTabShowBound = self.onTabShow.bind(self);\n        self.onTabHideBound = self.onTabHide.bind(self);\n        el.addEventListener('sortable:enable', self.onSortableEnableBound);\n        el.addEventListener('sortable:disable', self.onSortableDisableBound);\n        el.addEventListener('sortable:sort', self.onSortableSortBound);\n        el.addEventListener('tab:show', self.onTabShowBound);\n        el.addEventListener('tab:hide', self.onTabHideBound);\n      }\n\n      if (!virtualList) return;\n      self.$f7ready(function (f7) {\n        var $$ = self.$$;\n        var $el = $$(el);\n        var templateScript = $el.find('script');\n        var template = templateScript.html();\n\n        if (!template && templateScript.length > 0) {\n          template = templateScript[0].outerHTML;\n          template = /\\<script type=\"text\\/template7\"\\>(.*)<\\/script>/.exec(template)[1];\n        }\n\n        var vlParams = virtualListParams || {};\n        if (!template && !vlParams.renderItem && !vlParams.itemTemplate && !vlParams.renderExternal) return;\n        if (template) template = self.$t7.compile(template);\n        self.f7VirtualList = f7.virtualList.create(Utils.extend({\n          el: el,\n          itemTemplate: template,\n          on: {\n            itemBeforeInsert: function itemBeforeInsert(itemEl, item) {\n              var vl = this;\n              self.dispatchEvent('virtual:itembeforeinsert virtualItemBeforeInsert', vl, itemEl, item);\n            },\n            beforeClear: function beforeClear(fragment) {\n              var vl = this;\n              self.dispatchEvent('virtual:beforeclear virtualBeforeClear', vl, fragment);\n            },\n            itemsBeforeInsert: function itemsBeforeInsert(fragment) {\n              var vl = this;\n              self.dispatchEvent('virtual:itemsbeforeinsert virtualItemsBeforeInsert', vl, fragment);\n            },\n            itemsAfterInsert: function itemsAfterInsert(fragment) {\n              var vl = this;\n              self.dispatchEvent('virtual:itemsafterinsert virtualItemsAfterInsert', vl, fragment);\n            }\n          }\n        }, vlParams));\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      var self = this;\n      var el = self.refs.el;\n\n      if (el) {\n        el.removeEventListener('sortable:enable', self.onSortableEnableBound);\n        el.removeEventListener('sortable:disable', self.onSortableDisableBound);\n        el.removeEventListener('sortable:sort', self.onSortableSortBound);\n        el.removeEventListener('tab:show', self.onTabShowBound);\n        el.removeEventListener('tab:hide', self.onTabHideBound);\n      }\n\n      if (!(self.virtualList && self.f7VirtualList)) return;\n      if (self.f7VirtualList.destroy) self.f7VirtualList.destroy();\n    }\n  }, {\n    key: \"dispatchEvent\",\n    value: function dispatchEvent(events) {\n      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n\n      return __reactComponentDispatchEvent.apply(void 0, [this, events].concat(args));\n    }\n  }, {\n    key: \"classes\",\n    get: function get() {\n      var self = this;\n      var props = self.props;\n      var inset = props.inset,\n          tabletInset = props.tabletInset,\n          mediaList = props.mediaList,\n          simpleList = props.simpleList,\n          linksList = props.linksList,\n          sortable = props.sortable,\n          accordionList = props.accordionList,\n          contactsList = props.contactsList,\n          virtualList = props.virtualList,\n          sortableEnabled = props.sortableEnabled,\n          tab = props.tab,\n          tabActive = props.tabActive,\n          noHairlines = props.noHairlines,\n          noHairlinesIos = props.noHairlinesIos,\n          noHairlinesMd = props.noHairlinesMd,\n          noHairlinesBetween = props.noHairlinesBetween,\n          noHairlinesBetweenIos = props.noHairlinesBetweenIos,\n          noHairlinesBetweenMd = props.noHairlinesBetweenMd,\n          formStoreData = props.formStoreData,\n          inlineLabels = props.inlineLabels,\n          className = props.className,\n          noChevron = props.noChevron,\n          chevronCenter = props.chevronCenter;\n      return Utils.classNames(className, 'list', {\n        inset: inset,\n        'tablet-inset': tabletInset,\n        'media-list': mediaList,\n        'simple-list': simpleList,\n        'links-list': linksList,\n        sortable: sortable,\n        'accordion-list': accordionList,\n        'contacts-list': contactsList,\n        'virtual-list': virtualList,\n        'sortable-enabled': sortableEnabled,\n        tab: tab,\n        'tab-active': tabActive,\n        'no-hairlines': noHairlines,\n        'no-hairlines-between': noHairlinesBetween,\n        'no-hairlines-md': noHairlinesMd,\n        'no-hairlines-between-md': noHairlinesBetweenMd,\n        'no-hairlines-ios': noHairlinesIos,\n        'no-hairlines-between-ios': noHairlinesBetweenIos,\n        'form-store-data': formStoreData,\n        'inline-labels': inlineLabels,\n        'no-chevron': noChevron,\n        'chevron-center': chevronCenter\n      }, Mixins.colorClasses(props));\n    }\n  }, {\n    key: \"slots\",\n    get: function get() {\n      return __reactComponentSlots(this.props);\n    }\n  }, {\n    key: \"refs\",\n    get: function get() {\n      return this.__reactRefs;\n    },\n    set: function set(refs) {}\n  }]);\n\n  return F7List;\n}(React.Component);\n\n__reactComponentSetProps(F7List, Object.assign({\n  id: [String, Number],\n  className: String,\n  style: Object,\n  inset: Boolean,\n  tabletInset: Boolean,\n  mediaList: Boolean,\n  sortable: Boolean,\n  sortableEnabled: Boolean,\n  accordionList: Boolean,\n  contactsList: Boolean,\n  simpleList: Boolean,\n  linksList: Boolean,\n  noHairlines: Boolean,\n  noHairlinesBetween: Boolean,\n  noHairlinesMd: Boolean,\n  noHairlinesBetweenMd: Boolean,\n  noHairlinesIos: Boolean,\n  noHairlinesBetweenIos: Boolean,\n  noChevron: Boolean,\n  chevronCenter: Boolean,\n  tab: Boolean,\n  tabActive: Boolean,\n  form: Boolean,\n  formStoreData: Boolean,\n  inlineLabels: Boolean,\n  virtualList: Boolean,\n  virtualListParams: Object\n}, Mixins.colorProps));\n\nF7List.displayName = 'f7-list';\nexport default F7List;","map":null,"metadata":{},"sourceType":"module"}