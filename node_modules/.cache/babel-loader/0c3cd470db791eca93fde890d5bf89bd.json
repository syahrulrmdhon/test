{"ast":null,"code":"import _objectSpread from \"/Users/user/gredu-v2-fe/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/user/gredu-v2-fe/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/Users/user/gredu-v2-fe/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nexport default function clientMiddleware(client) {\n  return function (_ref) {\n    var dispatch = _ref.dispatch,\n        getState = _ref.getState;\n    return function (next) {\n      return function (action) {\n        if (typeof action === 'function') {\n          return action(dispatch, getState);\n        }\n\n        var promise = action.promise,\n            types = action.types,\n            rest = _objectWithoutProperties(action, [\"promise\", \"types\"]); // eslint-disable-line no-redeclare\n\n\n        if (!promise) {\n          return next(action);\n        }\n\n        var _types = _slicedToArray(types, 3),\n            REQUEST = _types[0],\n            SUCCESS = _types[1],\n            FAILURE = _types[2];\n\n        next(_objectSpread({}, rest, {\n          type: REQUEST\n        }));\n        var actionPromise = promise(client, dispatch);\n        actionPromise.then(function (result) {\n          return next(_objectSpread({}, rest, {\n            result: result,\n            type: SUCCESS\n          }));\n        }, function (error) {\n          return next(_objectSpread({}, rest, {\n            error: error,\n            type: FAILURE\n          }));\n        }).catch(function (error) {\n          console.error('MIDDLEWARE ERROR:', error);\n          next(_objectSpread({}, rest, {\n            error: error,\n            type: FAILURE\n          }));\n        });\n        return actionPromise;\n      };\n    };\n  };\n}","map":{"version":3,"sources":["/Users/user/gredu-v2-fe/src/redux-modules/middlewares/clientMiddleware.js"],"names":["clientMiddleware","client","dispatch","getState","next","action","promise","types","rest","REQUEST","SUCCESS","FAILURE","type","actionPromise","then","result","error","catch","console"],"mappings":";;;AAAA,eAAe,SAASA,gBAAT,CAA0BC,MAA1B,EAAkC;AAC/C,SAAO;AAAA,QAAGC,QAAH,QAAGA,QAAH;AAAA,QAAaC,QAAb,QAAaA,QAAb;AAAA,WAA4B,UAAAC,IAAI;AAAA,aAAI,UAAAC,MAAM,EAAI;AACnD,YAAI,OAAOA,MAAP,KAAkB,UAAtB,EAAkC;AAChC,iBAAOA,MAAM,CAACH,QAAD,EAAWC,QAAX,CAAb;AACD;;AAHkD,YAK3CG,OAL2C,GAKfD,MALe,CAK3CC,OAL2C;AAAA,YAKlCC,KALkC,GAKfF,MALe,CAKlCE,KALkC;AAAA,YAKxBC,IALwB,4BAKfH,MALe,yBAKP;;;AAC5C,YAAI,CAACC,OAAL,EAAc;AACZ,iBAAOF,IAAI,CAACC,MAAD,CAAX;AACD;;AARkD,oCAUfE,KAVe;AAAA,YAU5CE,OAV4C;AAAA,YAUnCC,OAVmC;AAAA,YAU1BC,OAV0B;;AAWnDP,QAAAA,IAAI,mBAAMI,IAAN;AAAYI,UAAAA,IAAI,EAAEH;AAAlB,WAAJ;AAEA,YAAMI,aAAa,GAAGP,OAAO,CAACL,MAAD,EAASC,QAAT,CAA7B;AACAW,QAAAA,aAAa,CAACC,IAAd,CACE,UAAAC,MAAM;AAAA,iBAAIX,IAAI,mBAAMI,IAAN;AAAYO,YAAAA,MAAM,EAANA,MAAZ;AAAoBH,YAAAA,IAAI,EAAEF;AAA1B,aAAR;AAAA,SADR,EAEE,UAAAM,KAAK;AAAA,iBAAIZ,IAAI,mBAAMI,IAAN;AAAYQ,YAAAA,KAAK,EAALA,KAAZ;AAAmBJ,YAAAA,IAAI,EAAED;AAAzB,aAAR;AAAA,SAFP,EAGEM,KAHF,CAGQ,UAACD,KAAD,EAAW;AACjBE,UAAAA,OAAO,CAACF,KAAR,CAAc,mBAAd,EAAmCA,KAAnC;AACAZ,UAAAA,IAAI,mBAAMI,IAAN;AAAYQ,YAAAA,KAAK,EAALA,KAAZ;AAAmBJ,YAAAA,IAAI,EAAED;AAAzB,aAAJ;AACD,SAND;AAQA,eAAOE,aAAP;AACD,OAvBsC;AAAA,KAAhC;AAAA,GAAP;AAwBD","sourcesContent":["export default function clientMiddleware(client) {\n  return ({ dispatch, getState }) => next => action => {\n    if (typeof action === 'function') {\n      return action(dispatch, getState);\n    }\n\n    const { promise, types, ...rest } = action; // eslint-disable-line no-redeclare\n    if (!promise) {\n      return next(action);\n    }\n\n    const [REQUEST, SUCCESS, FAILURE] = types;\n    next({ ...rest, type: REQUEST });\n\n    const actionPromise = promise(client, dispatch);\n    actionPromise.then(\n      result => next({ ...rest, result, type: SUCCESS }),\n      error => next({ ...rest, error, type: FAILURE })\n    ).catch((error) => {\n      console.error('MIDDLEWARE ERROR:', error);\n      next({ ...rest, error, type: FAILURE });\n    });\n\n    return actionPromise;\n  };\n}\n"]},"metadata":{},"sourceType":"module"}