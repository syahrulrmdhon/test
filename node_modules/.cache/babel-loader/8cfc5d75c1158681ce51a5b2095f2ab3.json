{"ast":null,"code":"'use strict';\n\nimport \"core-js/modules/es6.regexp.replace\";\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport PropTypes from 'prop-types';\nimport { fetch } from '../utils';\n\nvar GoogleSource = function GoogleSource(props) {\n  var _this = this;\n\n  _classCallCheck(this, GoogleSource);\n\n  _defineProperty(this, \"props\", null);\n\n  _defineProperty(this, \"isCompatible\", function () {\n    return !!_this.props.googleId;\n  });\n\n  _defineProperty(this, \"get\", function (setState) {\n    var _this$props = _this.props,\n        cache = _this$props.cache,\n        size = _this$props.size,\n        googleId = _this$props.googleId;\n    var url = \"https://picasaweb.google.com/data/entry/api/user/\".concat(googleId, \"?alt=json\");\n\n    if (cache.hasSourceFailedBefore(url)) {\n      setState(null);\n      return;\n    }\n\n    fetch(url, function (data) {\n      var src = data.entry.gphoto$thumbnail.$t;\n      var srcWithCorrectSize = src.replace('s64', 's' + size);\n      setState({\n        sourceName: 'google',\n        src: srcWithCorrectSize\n      });\n    }, function () {\n      // on error\n      cache.sourceFailed(url);\n      setState(null);\n    });\n  });\n\n  this.props = props;\n};\n\n_defineProperty(GoogleSource, \"propTypes\", {\n  googleId: PropTypes.string\n});\n\nexport { GoogleSource as default };","map":null,"metadata":{},"sourceType":"module"}