{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _commonFn = require('./commonFn');\n\nvar _commonFn2 = _interopRequireDefault(_commonFn);\n\nvar _moment = require('moment');\n\nvar _moment2 = _interopRequireDefault(_moment);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar CalendarSelect = function (_React$Component) {\n  _inherits(CalendarSelect, _React$Component);\n\n  function CalendarSelect(props) {\n    _classCallCheck(this, CalendarSelect);\n\n    var _this = _possibleConstructorReturn(this, (CalendarSelect.__proto__ || Object.getPrototypeOf(CalendarSelect)).call(this, props));\n\n    _this.state = {\n      viewMode: 'day',\n      currentYear: parseInt(props.calendarMonth.split('-')[0], 10)\n    };\n    return _this;\n  }\n\n  _createClass(CalendarSelect, [{\n    key: 'componentWillReceiveProps',\n    value: function componentWillReceiveProps(nextProps) {\n      if (!nextProps.showCalendar && this.props.showCalendar) {\n        this.setState({\n          viewMode: 'day'\n        });\n      }\n\n      if (nextProps.calendarMonth !== this.props.calendarMonth) {\n        this.setState({\n          currentYear: parseInt(nextProps.calendarMonth.split('-')[0], 10)\n        });\n      }\n    } // 日期是否可用\n\n  }, {\n    key: 'isDateEnable',\n    value: function isDateEnable(date) {\n      var _props = this.props,\n          minDate = _props.minDate,\n          maxDate = _props.maxDate;\n      return date >= minDate && date <= maxDate;\n    } // 选择日期\n\n  }, {\n    key: 'selectTime',\n    value: function selectTime(date) {\n      if (this.isDateEnable(date)) {\n        this.props.selectTime(date);\n      }\n    } //左右月份年份icon\n\n  }, {\n    key: 'yearMonthChange',\n    value: function yearMonthChange(type, unit) {\n      var _state = this.state,\n          viewMode = _state.viewMode,\n          currentYear = _state.currentYear;\n\n      if (viewMode === 'day') {\n        this.props.calendarChange(type, unit);\n      } else {\n        this.setState({\n          currentYear: currentYear + (type < 0 ? -12 : 12)\n        });\n      }\n    } // 日期鼠标悬停\n\n  }, {\n    key: 'mouseEnterTime',\n    value: function mouseEnterTime(date, e) {\n      if (this.isDateEnable(date)) {\n        this.props.mouseEnterTime(date);\n      } else {\n        e.target.classList.add('disable');\n      }\n    } // 视图修改\n\n  }, {\n    key: 'changeView',\n    value: function changeView(type) {\n      this.state.viewMode !== type && this.setState({\n        viewMode: type\n      });\n    } // 选择月份\n\n  }, {\n    key: 'changeMonthOrYear',\n    value: function changeMonthOrYear(val, unit) {\n      var type = unit === 'month' ? val - (0, _moment2.default)(this.props.calendarMonth).month() : this.state.currentYear + val - parseInt(this.props.calendarMonth.split('-')[0], 10);\n      this.props.calendarChange(type, unit);\n      this.setState({\n        viewMode: 'day'\n      });\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n\n      var _props2 = this.props,\n          calendarMonth = _props2.calendarMonth,\n          className = _props2.className,\n          isSelected = _props2.isSelected,\n          lang = _props2.lang,\n          sync = _props2.sync;\n      var _state2 = this.state,\n          viewMode = _state2.viewMode,\n          currentYear = _state2.currentYear;\n      var weekdays = lang === 'zh-cn' ? ['日', '一', '二', '三', '四', '五', '六'] : ['Sun', 'Mon', 'Tus', 'Wes', 'Thu', 'Fri', 'Sat'];\n      var monthList = lang === 'zh-cn' ? ['一月', '二月', '三月', '四月', '五月', '六月', '七月', '八月', '九月', '十月', '十一月', '十二月'] : ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n\n      var isCurrentMonth = calendarMonth === _commonFn2.default.ym();\n\n      var yearList = new Array(16).fill(0);\n      return _react2.default.createElement('div', {\n        className: className\n      }, _react2.default.createElement('div', {\n        className: 'header-section'\n      }, (sync !== 'end' && viewMode !== 'month' || viewMode === 'year') && _react2.default.createElement('span', {\n        className: 'prev-year fa fa-backward',\n        onClick: function onClick() {\n          return _this2.yearMonthChange(-1, 'year');\n        }\n      }), sync !== 'end' && viewMode === 'day' && _react2.default.createElement('span', {\n        className: 'prev-month fa fa-caret-left',\n        onClick: function onClick() {\n          return _this2.yearMonthChange(-1, 'month');\n        }\n      }), sync !== 'start' && viewMode === 'day' && _react2.default.createElement('span', {\n        className: 'next-month fa fa-caret-right',\n        onClick: function onClick() {\n          return _this2.yearMonthChange(1, 'month');\n        }\n      }), (sync !== 'start' && viewMode !== 'month' || viewMode === 'year') && _react2.default.createElement('span', {\n        className: 'next-year fa fa-forward',\n        onClick: function onClick() {\n          return _this2.yearMonthChange(1, 'year');\n        }\n      }), _react2.default.createElement('span', {\n        className: 'year-selector'\n      }, _react2.default.createElement('span', {\n        className: 'current',\n        onClick: function onClick() {\n          return _this2.changeView('year');\n        }\n      }, calendarMonth.split('-')[0], lang === 'zh-cn' && '年')), _react2.default.createElement('span', {\n        className: 'month-selector'\n      }, _react2.default.createElement('span', {\n        className: 'current',\n        onClick: function onClick() {\n          return _this2.changeView('month');\n        }\n      }, calendarMonth.split('-')[1], lang === 'zh-cn' && '月'))), _react2.default.createElement('div', {\n        className: 'calender-section'\n      }, viewMode === 'day' && weekdays.map(function (day, key) {\n        return _react2.default.createElement('div', {\n          key: key,\n          className: 'date-weekday'\n        }, day);\n      }), viewMode === 'day' && _commonFn2.default.calendarArray(calendarMonth).map(function (item, key) {\n        return _react2.default.createElement('div', {\n          key: key,\n          className: 'date-item ' + isSelected(item) + ' ' + (item.indexOf(calendarMonth) !== 0 ? 'not-current-month' : '') + ' ' + (isCurrentMonth && _commonFn2.default.ymd() === item ? 'current-day' : ''),\n          onClick: function onClick() {\n            return _this2.selectTime(item);\n          },\n          onMouseEnter: function onMouseEnter(e) {\n            return _this2.mouseEnterTime(item, e);\n          }\n        }, item.split('-')[2]);\n      }), viewMode === 'month' && monthList.map(function (month, key) {\n        return _react2.default.createElement('div', {\n          key: key,\n          className: 'month-item',\n          onClick: function onClick() {\n            return _this2.changeMonthOrYear(key, 'month');\n          }\n        }, month);\n      }), viewMode === 'year' && monthList.map(function (month, key) {\n        return _react2.default.createElement('div', {\n          key: key,\n          className: 'month-item',\n          onClick: function onClick() {\n            return _this2.changeMonthOrYear(key, 'year');\n          }\n        }, currentYear + key);\n      })));\n    }\n  }]);\n\n  return CalendarSelect;\n}(_react2.default.Component);\n\nexports.default = CalendarSelect;","map":null,"metadata":{},"sourceType":"script"}