{"ast":null,"code":"import _classCallCheck from \"/Users/user/Documents/On Progress/gredu-v2-fe/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/user/Documents/On Progress/gredu-v2-fe/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/user/Documents/On Progress/gredu-v2-fe/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/user/Documents/On Progress/gredu-v2-fe/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/user/Documents/On Progress/gredu-v2-fe/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport React from 'react';\nimport Utils from '../utils/utils';\nimport Mixins from '../utils/mixins';\nimport __reactComponentSlots from '../runtime-helpers/react-component-slots.js';\nimport __reactComponentSetProps from '../runtime-helpers/react-component-set-props.js';\n\nvar F7Toolbar =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(F7Toolbar, _React$Component);\n\n  function F7Toolbar(props, context) {\n    var _this;\n\n    _classCallCheck(this, F7Toolbar);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(F7Toolbar).call(this, props, context));\n    _this.__reactRefs = {};\n    return _this;\n  }\n\n  _createClass(F7Toolbar, [{\n    key: \"hide\",\n    value: function hide(animate) {\n      var self = this;\n      if (!self.$f7) return;\n      self.$f7.toolbar.hide(this.refs.el, animate);\n    }\n  }, {\n    key: \"show\",\n    value: function show(animate) {\n      var self = this;\n      if (!self.$f7) return;\n      self.$f7.toolbar.show(this.refs.el, animate);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var self = this;\n      var props = self.props;\n      var id = props.id,\n          style = props.style,\n          className = props.className,\n          inner = props.inner,\n          bottomMd = props.bottomMd,\n          tabbar = props.tabbar,\n          labels = props.labels,\n          scrollable = props.scrollable,\n          hidden = props.hidden,\n          noShadow = props.noShadow,\n          noHairline = props.noHairline;\n      var classes = Utils.classNames(className, 'toolbar', {\n        'toolbar-bottom-md': bottomMd,\n        tabbar: tabbar,\n        'tabbar-labels': labels,\n        'tabbar-scrollable': scrollable,\n        'toolbar-hidden': hidden,\n        'no-shadow': noShadow,\n        'no-hairline': noHairline\n      }, Mixins.colorClasses(props));\n      return React.createElement('div', {\n        id: id,\n        style: style,\n        ref: function ref(__reactNode) {\n          _this2.__reactRefs['el'] = __reactNode;\n        },\n        className: classes\n      }, this.slots['before-inner'], inner ? React.createElement('div', {\n        className: 'toolbar-inner'\n      }, this.slots['default']) : this.slots['default'], this.slots['after-inner']);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var self = this;\n      self.$f7ready(function (f7) {\n        if (self.props.tabbar) f7.toolbar.setHighlight(self.refs.el);\n      });\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      var self = this;\n\n      if (self.props.tabbar && self.$f7) {\n        self.$f7.toolbar.setHighlight(self.refs.el);\n      }\n    }\n  }, {\n    key: \"slots\",\n    get: function get() {\n      return __reactComponentSlots(this.props);\n    }\n  }, {\n    key: \"refs\",\n    get: function get() {\n      return this.__reactRefs;\n    },\n    set: function set(refs) {}\n  }]);\n\n  return F7Toolbar;\n}(React.Component);\n\n__reactComponentSetProps(F7Toolbar, Object.assign({\n  id: [String, Number],\n  className: String,\n  style: Object,\n  bottomMd: Boolean,\n  tabbar: Boolean,\n  labels: Boolean,\n  scrollable: Boolean,\n  hidden: Boolean,\n  noShadow: Boolean,\n  noHairline: Boolean,\n  inner: {\n    type: Boolean,\n    default: true\n  }\n}, Mixins.colorProps));\n\nF7Toolbar.displayName = 'f7-toolbar';\nexport default F7Toolbar;","map":null,"metadata":{},"sourceType":"module"}