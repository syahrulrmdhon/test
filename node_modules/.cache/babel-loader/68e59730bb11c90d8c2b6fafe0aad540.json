{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _moment = require('moment');\n\nvar _moment2 = _interopRequireDefault(_moment);\n\nvar _commonFn = require('./commonFn');\n\nvar _commonFn2 = _interopRequireDefault(_commonFn);\n\nvar _min = require('lodash/min');\n\nvar _min2 = _interopRequireDefault(_min);\n\nvar _max = require('lodash/max');\n\nvar _max2 = _interopRequireDefault(_max);\n\nvar _calendarSelect = require('./calendarSelect');\n\nvar _calendarSelect2 = _interopRequireDefault(_calendarSelect);\n\nrequire('font-awesome/css/font-awesome.css');\n\nrequire('../assets/style/main.css');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar DateRange = function (_React$Component) {\n  _inherits(DateRange, _React$Component);\n\n  function DateRange(props) {\n    _classCallCheck(this, DateRange);\n\n    var _this = _possibleConstructorReturn(this, (DateRange.__proto__ || Object.getPrototypeOf(DateRange)).call(this, props));\n\n    _this.state = {\n      format: props.format || 'x',\n      // 日期格式\n      minDate: _commonFn2.default.ymd(props.minDate || '1900-01-01'),\n      maxDate: _commonFn2.default.ymd(props.maxDate || '2200-01-01'),\n      startMonth: _commonFn2.default.ym(props.startDate),\n      // 默认开始月份\n      endMonth: props.endDate && !props.sync ? _commonFn2.default.ym(props.endDate) : (0, _moment2.default)(props.startDate || undefined).add(1, 'months').format('YYYY-MM'),\n      // 默认结束月份\n      showCalendar: false,\n      // 是否显示日历\n      startDate: props.startDate ? _commonFn2.default.ymd(props.startDate) : '',\n      // 默认开始时间\n      endDate: props.endDate ? _commonFn2.default.ymd(props.endDate) : '',\n      // 默认结束时间\n      hoverTime: '',\n      // 鼠标悬停的日期\n      isSelecting: '',\n      //选择状态位：'', 'startDate', 'endDate'\n      placeholder: props.placeholder || 'YYYY-MM-DD',\n      lang: props.lang === 'zh-cn' ? 'zh-cn' : 'en',\n      sync: props.sync || false // 左右两个月份是否同步\n\n    };\n    _this.dateCallback = _this.dateCallback.bind(_this);\n    return _this;\n  } // 显示、隐藏日历\n\n\n  _createClass(DateRange, [{\n    key: 'dateSectionDisplay',\n    value: function dateSectionDisplay(type) {\n      var _state = this.state,\n          startMonth = _state.startMonth,\n          endMonth = _state.endMonth,\n          showCalendar = _state.showCalendar;\n\n      if (showCalendar !== (type === 'show')) {\n        // 处理开始结束月份显示顺序\n        if (startMonth > endMonth) {\n          this.setState({\n            startMonth: endMonth,\n            endMonth: startMonth\n          });\n        } else if (startMonth === endMonth) {\n          this.setState({\n            endMonth: (0, _moment2.default)(endMonth).add(1, 'month').format('YYYY-MM')\n          });\n        }\n\n        this.setState({\n          showCalendar: type === 'show',\n          isSelecting: type === 'show' ? 'startDate' : ''\n        });\n      }\n    } // 修改日历显示的年月\n\n  }, {\n    key: 'calendarChange',\n    value: function calendarChange(type, unit, section) {\n      if (!this.state.sync) {\n        var name = section + 'Month';\n        this.setState(_defineProperty({}, name, (0, _moment2.default)(this.state[name]).add(type, unit).format('YYYY-MM')));\n      } else {\n        this.setState({\n          startMonth: (0, _moment2.default)(this.state.startMonth).add(type, unit).format('YYYY-MM'),\n          endMonth: (0, _moment2.default)(this.state.endMonth).add(type, unit).format('YYYY-MM')\n        });\n      }\n    } // 点击日历日期，选择时间\n\n  }, {\n    key: 'selectTime',\n    value: function selectTime(time) {\n      if (this.state.isSelecting === 'startDate') {\n        this.setState({\n          startDate: time,\n          endDate: time,\n          isSelecting: 'endDate',\n          hoverTime: time\n        }, this.dateCallback);\n      } else if (this.state.isSelecting === 'endDate') {\n        var _state2 = this.state,\n            startDate = _state2.startDate,\n            endDate = _state2.endDate;\n\n        if (startDate > time) {\n          endDate = startDate;\n          startDate = time;\n        } else {\n          endDate = time;\n        }\n\n        this.setState({\n          startDate: startDate,\n          endDate: endDate,\n          isSelecting: '',\n          showCalendar: false\n        }, this.dateCallback);\n      }\n    } // 鼠标悬停日期，选中区域\n\n  }, {\n    key: 'mouseEnterTime',\n    value: function mouseEnterTime(time) {\n      if (this.state.isSelecting === 'endDate') {\n        this.setState({\n          hoverTime: time\n        });\n      }\n    } // 日期是否被选中\n\n  }, {\n    key: 'isSelected',\n    value: function isSelected(date) {\n      var _state3 = this.state,\n          startDate = _state3.startDate,\n          endDate = _state3.endDate,\n          hoverTime = _state3.hoverTime;\n      var timeArr = [startDate, endDate];\n      if (hoverTime) timeArr.push(hoverTime);\n\n      if (date > (0, _min2.default)(timeArr) && date < (0, _max2.default)(timeArr)) {\n        return 'selected';\n      } else if (date === (0, _min2.default)(timeArr) || date === (0, _max2.default)(timeArr)) {\n        return 'start-or-end-selected';\n      }\n\n      return '';\n    } // 选择时间时，鼠标移出日历区域\n\n  }, {\n    key: 'calendarMouseLeave',\n    value: function calendarMouseLeave() {\n      if (this.state.isSelecting === 'endDate') {\n        this.setState({\n          hoverTime: ''\n        });\n      }\n    } // 回调组件外部方法，传出修改\n\n  }, {\n    key: 'dateCallback',\n    value: function dateCallback() {\n      var _props = this.props,\n          changeStartDate = _props.changeStartDate,\n          changeEndDate = _props.changeEndDate;\n      var _state4 = this.state,\n          startDate = _state4.startDate,\n          endDate = _state4.endDate,\n          format = _state4.format;\n\n      if (changeStartDate) {\n        changeStartDate((0, _moment2.default)(startDate).format(format));\n      }\n\n      if (changeEndDate) {\n        changeEndDate((0, _moment2.default)(endDate).set({\n          hour: 23,\n          minute: 59,\n          second: 59,\n          millisecond: 999\n        }).format(format));\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n\n      var _state5 = this.state,\n          minDate = _state5.minDate,\n          maxDate = _state5.maxDate,\n          startMonth = _state5.startMonth,\n          endMonth = _state5.endMonth,\n          startDate = _state5.startDate,\n          endDate = _state5.endDate,\n          showCalendar = _state5.showCalendar,\n          placeholder = _state5.placeholder,\n          lang = _state5.lang,\n          sync = _state5.sync;\n      return _react2.default.createElement('div', {\n        className: 'date-range-body'\n      }, _react2.default.createElement('div', {\n        className: 'input-section',\n        onClick: function onClick() {\n          return _this2.dateSectionDisplay('show');\n        }\n      }, _react2.default.createElement('input', {\n        type: 'text',\n        className: 'start-time',\n        value: startDate,\n        placeholder: placeholder\n      }), _react2.default.createElement('span', {\n        className: 'clip-span'\n      }, \"\\u2014\\u2014\"), _react2.default.createElement('input', {\n        type: 'text',\n        className: 'end-time',\n        value: endDate,\n        placeholder: placeholder\n      })), _react2.default.createElement('div', {\n        className: 'date-section ' + (showCalendar && 'date-section-show'),\n        onMouseLeave: function onMouseLeave() {\n          return _this2.calendarMouseLeave();\n        }\n      }, _react2.default.createElement(_calendarSelect2.default, {\n        className: 'date-start-section',\n        calendarMonth: startMonth,\n        minDate: minDate,\n        maxDate: maxDate,\n        lang: lang,\n        sync: sync && 'start',\n        showCalendar: showCalendar,\n        isSelected: function isSelected(item) {\n          return _this2.isSelected(item);\n        },\n        selectTime: function selectTime(item) {\n          return _this2.selectTime(item);\n        },\n        mouseEnterTime: function mouseEnterTime(item) {\n          return _this2.mouseEnterTime(item);\n        },\n        calendarChange: function calendarChange(type, unit) {\n          return _this2.calendarChange(type, unit, 'start');\n        }\n      }), _react2.default.createElement(_calendarSelect2.default, {\n        className: 'date-end-section',\n        calendarMonth: endMonth,\n        minDate: minDate,\n        maxDate: maxDate,\n        lang: lang,\n        sync: sync && 'end',\n        showCalendar: showCalendar,\n        isSelected: function isSelected(item) {\n          return _this2.isSelected(item);\n        },\n        selectTime: function selectTime(item) {\n          return _this2.selectTime(item);\n        },\n        mouseEnterTime: function mouseEnterTime(item) {\n          return _this2.mouseEnterTime(item);\n        },\n        calendarChange: function calendarChange(type, unit) {\n          return _this2.calendarChange(type, unit, 'end');\n        }\n      })), showCalendar && _react2.default.createElement('div', {\n        className: 'bg-for-close',\n        onClick: function onClick() {\n          return _this2.dateSectionDisplay('hide');\n        }\n      }));\n    }\n  }]);\n\n  return DateRange;\n}(_react2.default.Component);\n\nexports.default = DateRange;","map":null,"metadata":{},"sourceType":"script"}