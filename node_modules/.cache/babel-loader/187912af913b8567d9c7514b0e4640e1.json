{"ast":null,"code":"import _classCallCheck from \"/Users/user/Documents/On Progress/gredu-v2-fe/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport axios from 'axios'; // import apiHost from './constant';\n\nvar methods = ['get', 'post', 'put', 'patch', 'del'];\nvar apiHost = 'localhost:2222';\n\nvar ApiHost = function ApiHost(req) {\n  var _this = this;\n\n  _classCallCheck(this, ApiHost);\n\n  methods.forEach(function (method) {\n    _this[method] = function (path) {\n      var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n          params = _ref.params,\n          data = _ref.data,\n          headers = _ref.headers,\n          files = _ref.files,\n          fields = _ref.fields,\n          fallback = _ref.fallback;\n\n      var isExternal = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n      var typeForm = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n      return new Promise(function (resolve, reject) {\n        var request;\n\n        if (isExternal) {\n          request = axios[method](\"\".concat(apiHost).concat(path));\n        } else {\n          request = axios[method](path);\n        }\n\n        if (params) {\n          request.query(params);\n        }\n\n        if (headers) {\n          request.set(headers);\n        }\n\n        if (files) {\n          files.forEach(function (file) {\n            return request.attach(file.key, file.value);\n          });\n        }\n\n        if (fields) {\n          fields.forEach(function (item) {\n            return request.field(item.key, item.value);\n          });\n        }\n\n        if (data) {\n          request.send(data);\n        }\n\n        if (typeForm) {\n          request.type('form');\n        }\n\n        request.end(function (err) {\n          var _ref2 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n              body = _ref2.body;\n\n          if (err) {\n            if (fallback) {\n              fallback(err);\n              reject(body || err);\n            } else {\n              reject(body || err);\n            }\n          } else {\n            resolve(body);\n          }\n        });\n      });\n    };\n  });\n};\n\nexport { ApiHost as default };","map":{"version":3,"sources":["/Users/user/Documents/On Progress/gredu-v2-fe/src/routes/api_host.js"],"names":["axios","methods","apiHost","ApiHost","req","forEach","method","path","params","data","headers","files","fields","fallback","isExternal","typeForm","Promise","resolve","reject","request","query","set","file","attach","key","value","item","field","send","type","end","err","body"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,IAAMC,OAAO,GAAG,CAAC,KAAD,EAAQ,MAAR,EAAgB,KAAhB,EAAuB,OAAvB,EAAgC,KAAhC,CAAhB;AACA,IAAMC,OAAO,GAAG,gBAAhB;;IAEqBC,O,GACnB,iBAAYC,GAAZ,EAAiB;AAAA;;AAAA;;AACfH,EAAAA,OAAO,CAACI,OAAR,CAAgB,UAAAC,MAAM,EAAI;AACxB,IAAA,KAAI,CAACA,MAAD,CAAJ,GAAe,UAACC,IAAD;AAAA,qFAA4D,EAA5D;AAAA,UAASC,MAAT,QAASA,MAAT;AAAA,UAAiBC,IAAjB,QAAiBA,IAAjB;AAAA,UAAuBC,OAAvB,QAAuBA,OAAvB;AAAA,UAAgCC,KAAhC,QAAgCA,KAAhC;AAAA,UAAuCC,MAAvC,QAAuCA,MAAvC;AAAA,UAA+CC,QAA/C,QAA+CA,QAA/C;;AAAA,UAAgEC,UAAhE,uEAA6E,IAA7E;AAAA,UAAmFC,QAAnF,uEAA8F,KAA9F;AAAA,aAAwG,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtJ,YAAIC,OAAJ;;AACA,YAAIL,UAAJ,EAAgB;AACdK,UAAAA,OAAO,GAAGnB,KAAK,CAACM,MAAD,CAAL,WAAiBJ,OAAjB,SAA2BK,IAA3B,EAAV;AACD,SAFD,MAEO;AACLY,UAAAA,OAAO,GAAGnB,KAAK,CAACM,MAAD,CAAL,CAAcC,IAAd,CAAV;AACD;;AACD,YAAIC,MAAJ,EAAY;AACVW,UAAAA,OAAO,CAACC,KAAR,CAAcZ,MAAd;AACD;;AAED,YAAIE,OAAJ,EAAa;AACXS,UAAAA,OAAO,CAACE,GAAR,CAAYX,OAAZ;AACD;;AAED,YAAIC,KAAJ,EAAW;AACTA,UAAAA,KAAK,CAACN,OAAN,CAAc,UAAAiB,IAAI;AAAA,mBAAIH,OAAO,CAACI,MAAR,CAAeD,IAAI,CAACE,GAApB,EAAyBF,IAAI,CAACG,KAA9B,CAAJ;AAAA,WAAlB;AACD;;AAED,YAAIb,MAAJ,EAAY;AACVA,UAAAA,MAAM,CAACP,OAAP,CAAe,UAAAqB,IAAI;AAAA,mBAAIP,OAAO,CAACQ,KAAR,CAAcD,IAAI,CAACF,GAAnB,EAAwBE,IAAI,CAACD,KAA7B,CAAJ;AAAA,WAAnB;AACD;;AAED,YAAIhB,IAAJ,EAAU;AACRU,UAAAA,OAAO,CAACS,IAAR,CAAanB,IAAb;AACD;;AAED,YAAIM,QAAJ,EAAc;AACZI,UAAAA,OAAO,CAACU,IAAR,CAAa,MAAb;AACD;;AACDV,QAAAA,OAAO,CAACW,GAAR,CAAY,UAACC,GAAD,EAAwB;AAAA,0FAAP,EAAO;AAAA,cAAhBC,IAAgB,SAAhBA,IAAgB;;AAClC,cAAID,GAAJ,EAAS;AACP,gBAAIlB,QAAJ,EAAc;AACZA,cAAAA,QAAQ,CAACkB,GAAD,CAAR;AACAb,cAAAA,MAAM,CAACc,IAAI,IAAID,GAAT,CAAN;AACD,aAHD,MAGO;AACLb,cAAAA,MAAM,CAACc,IAAI,IAAID,GAAT,CAAN;AACD;AACF,WAPD,MAOO;AAAEd,YAAAA,OAAO,CAACe,IAAD,CAAP;AAAgB;AAC1B,SATD;AAUD,OAxCsH,CAAxG;AAAA,KAAf;AAyCD,GA1CD;AA2CD,C;;SA7CkB7B,O","sourcesContent":["import axios from 'axios';\n// import apiHost from './constant';\nconst methods = ['get', 'post', 'put', 'patch', 'del'];\nconst apiHost = 'localhost:2222'\n\nexport default class ApiHost {\n  constructor(req) {\n    methods.forEach(method => {\n      this[method] = (path, { params, data, headers, files, fields, fallback } = {}, isExternal = true, typeForm = false) => new Promise((resolve, reject) => {\n        let request;\n        if (isExternal) {\n          request = axios[method](`${apiHost}${path}`);\n        } else {\n          request = axios[method](path);\n        }\n        if (params) {\n          request.query(params);\n        }\n\n        if (headers) {\n          request.set(headers);\n        }\n\n        if (files) {\n          files.forEach(file => request.attach(file.key, file.value));\n        }\n\n        if (fields) {\n          fields.forEach(item => request.field(item.key, item.value));\n        }\n\n        if (data) {\n          request.send(data);\n        }\n\n        if (typeForm) {\n          request.type('form');\n        }\n        request.end((err, { body } = {}) => {\n          if (err) {\n            if (fallback) {\n              fallback(err);\n              reject(body || err);\n            } else {\n              reject(body || err);\n            }\n          } else { resolve(body); }\n        });\n      });\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"module"}