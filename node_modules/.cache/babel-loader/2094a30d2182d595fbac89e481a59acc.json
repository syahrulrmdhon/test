{"ast":null,"code":"import _objectSpread from \"/Users/user/gredu-v2-fe/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar SET = 'modules/user/SET';\nvar RESET = 'modules/user/RESET';\nvar LOAD = 'modules/user/LOAD';\nvar LOAD_SUCCESS = 'modules/user/LOAD_SUCCESS';\nvar LOAD_FAIL = 'modules/user/LOAD_FAIL';\nvar initialState = null;\nexport default function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case LOAD:\n      return _objectSpread({}, state, {\n        loading: true\n      });\n\n    case LOAD_SUCCESS:\n      return _objectSpread({}, state, {\n        loaded: true,\n        loading: false\n      }, action.result);\n\n    case LOAD_FAIL:\n      return {\n        loaded: true,\n        loading: false,\n        error: action.error\n      };\n\n    case SET:\n      return _objectSpread({}, state, action.payload);\n\n    case RESET:\n      return _objectSpread({}, initialState);\n\n    default:\n      return state;\n  }\n}\nexport function login() {\n  return {\n    types: [LOAD, LOAD_SUCCESS, LOAD_FAIL],\n    promise: function promise(client) {\n      return client.get(\"https://jsonplaceholder.typicode.com/posts/\");\n    }\n  };\n}\nexport function reset() {\n  return {\n    type: RESET\n  };\n}","map":{"version":3,"sources":["/Users/user/gredu-v2-fe/src/redux-modules/modules/user.js"],"names":["SET","RESET","LOAD","LOAD_SUCCESS","LOAD_FAIL","initialState","reducer","state","action","type","loading","loaded","result","error","payload","login","types","promise","client","get","reset"],"mappings":";AAAA,IAAMA,GAAG,GAAG,kBAAZ;AACA,IAAMC,KAAK,GAAG,oBAAd;AACA,IAAMC,IAAI,GAAG,mBAAb;AACA,IAAMC,YAAY,GAAG,2BAArB;AACA,IAAMC,SAAS,GAAG,wBAAlB;AAEA,IAAMC,YAAY,GAAG,IAArB;AAEA,eAAe,SAASC,OAAT,GAA+C;AAAA,MAA9BC,KAA8B,uEAAtBF,YAAsB;AAAA,MAARG,MAAQ;;AAC5D,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKP,IAAL;AACE,+BACKK,KADL;AAEEG,QAAAA,OAAO,EAAE;AAFX;;AAIF,SAAKP,YAAL;AACE,+BACKI,KADL;AAEEI,QAAAA,MAAM,EAAE,IAFV;AAGED,QAAAA,OAAO,EAAE;AAHX,SAIKF,MAAM,CAACI,MAJZ;;AAMF,SAAKR,SAAL;AACE,aAAO;AACLO,QAAAA,MAAM,EAAE,IADH;AAELD,QAAAA,OAAO,EAAE,KAFJ;AAGLG,QAAAA,KAAK,EAAEL,MAAM,CAACK;AAHT,OAAP;;AAKF,SAAKb,GAAL;AACE,+BAAYO,KAAZ,EAAsBC,MAAM,CAACM,OAA7B;;AACF,SAAKb,KAAL;AACE,+BAAYI,YAAZ;;AACF;AACE,aAAOE,KAAP;AAxBJ;AA0BD;AAED,OAAO,SAASQ,KAAT,GAAiB;AACtB,SAAO;AACLC,IAAAA,KAAK,EAAE,CAACd,IAAD,EAAOC,YAAP,EAAqBC,SAArB,CADF;AAELa,IAAAA,OAAO,EAAE,iBAAAC,MAAM;AAAA,aAAIA,MAAM,CAACC,GAAP,+CAAJ;AAAA;AAFV,GAAP;AAID;AAED,OAAO,SAASC,KAAT,GAAiB;AACtB,SAAO;AACLX,IAAAA,IAAI,EAAER;AADD,GAAP;AAGD","sourcesContent":["const SET = 'modules/user/SET';\nconst RESET = 'modules/user/RESET';\nconst LOAD = 'modules/user/LOAD';\nconst LOAD_SUCCESS = 'modules/user/LOAD_SUCCESS';\nconst LOAD_FAIL = 'modules/user/LOAD_FAIL';\n\nconst initialState = null;\n\nexport default function reducer(state = initialState, action) {\n  switch (action.type) {\n    case LOAD:\n      return {\n        ...state,\n        loading: true,\n      }\n    case LOAD_SUCCESS:\n      return {\n        ...state,\n        loaded: true,\n        loading: false,\n        ...action.result\n      }\n    case LOAD_FAIL:\n      return {\n        loaded: true,\n        loading: false,\n        error: action.error\n      }\n    case SET:\n      return { ...state, ...action.payload }\n    case RESET:\n      return { ...initialState }\n    default:\n      return state\n  }\n}\n\nexport function login() {\n  return {\n    types: [LOAD, LOAD_SUCCESS, LOAD_FAIL],\n    promise: client => client.get(`https://jsonplaceholder.typicode.com/posts/`)\n  }\n}\n\nexport function reset() {\n  return {\n    type: RESET\n  }\n}\n\n"]},"metadata":{},"sourceType":"module"}