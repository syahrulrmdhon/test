{"ast":null,"code":"import _classCallCheck from \"/Users/user/Documents/On Progress/gredu-v2-fe/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/user/Documents/On Progress/gredu-v2-fe/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/user/Documents/On Progress/gredu-v2-fe/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/user/Documents/On Progress/gredu-v2-fe/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/user/Documents/On Progress/gredu-v2-fe/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/user/Documents/On Progress/gredu-v2-fe/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport React from 'react';\nimport Utils from '../utils/utils';\nimport Mixins from '../utils/mixins';\nimport __reactComponentDispatchEvent from '../runtime-helpers/react-component-dispatch-event.js';\nimport __reactComponentSlots from '../runtime-helpers/react-component-slots.js';\nimport __reactComponentSetProps from '../runtime-helpers/react-component-set-props.js';\n\nvar F7MessagebarSheetImage =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(F7MessagebarSheetImage, _React$Component);\n\n  function F7MessagebarSheetImage(props, context) {\n    var _this;\n\n    _classCallCheck(this, F7MessagebarSheetImage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(F7MessagebarSheetImage).call(this, props, context));\n    _this.__reactRefs = {};\n\n    (function () {\n      _this.onChange = _this.onChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    })();\n\n    return _this;\n  }\n\n  _createClass(F7MessagebarSheetImage, [{\n    key: \"onChange\",\n    value: function onChange(event) {\n      if (this.props.checked) this.dispatchEvent('checked', event);else this.dispatchEvent('unchecked', event);\n      this.dispatchEvent('change', event);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var self = this;\n      var props = self.props;\n      var image = props.image,\n          checked = props.checked,\n          id = props.id,\n          className = props.className,\n          style = props.style;\n      var classes = Utils.classNames(className, 'messagebar-sheet-image', 'checkbox', Mixins.colorClasses(props));\n      var styles = Utils.extend({\n        backgroundImage: image && \"url(\".concat(image, \")\")\n      }, style || {});\n      var inputEl;\n      {\n        inputEl = React.createElement('input', {\n          ref: function ref(__reactNode) {\n            _this2.__reactRefs['inputEl'] = __reactNode;\n          },\n          type: 'checkbox',\n          checked: checked,\n          onChange: self.onChange\n        });\n      }\n      return React.createElement('label', {\n        id: id,\n        className: classes,\n        style: styles\n      }, inputEl, React.createElement('i', {\n        className: 'icon icon-checkbox'\n      }), this.slots['default']);\n    }\n  }, {\n    key: \"dispatchEvent\",\n    value: function dispatchEvent(events) {\n      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n\n      return __reactComponentDispatchEvent.apply(void 0, [this, events].concat(args));\n    }\n  }, {\n    key: \"slots\",\n    get: function get() {\n      return __reactComponentSlots(this.props);\n    }\n  }, {\n    key: \"refs\",\n    get: function get() {\n      return this.__reactRefs;\n    },\n    set: function set(refs) {}\n  }]);\n\n  return F7MessagebarSheetImage;\n}(React.Component);\n\n__reactComponentSetProps(F7MessagebarSheetImage, Object.assign({\n  id: [String, Number],\n  className: String,\n  style: Object,\n  image: String,\n  checked: Boolean\n}, Mixins.colorProps));\n\nF7MessagebarSheetImage.displayName = 'f7-messagebar-sheet-image';\nexport default F7MessagebarSheetImage;","map":null,"metadata":{},"sourceType":"module"}