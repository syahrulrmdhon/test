{"ast":null,"code":"import _classCallCheck from \"/Users/user/Documents/On Progress/gredu-v2-fe/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/user/Documents/On Progress/gredu-v2-fe/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/user/Documents/On Progress/gredu-v2-fe/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/user/Documents/On Progress/gredu-v2-fe/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/user/Documents/On Progress/gredu-v2-fe/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport React from 'react';\nimport Mixins from '../utils/mixins';\nimport Utils from '../utils/utils';\nimport __reactComponentWatch from '../runtime-helpers/react-component-watch.js';\nimport __reactComponentDispatchEvent from '../runtime-helpers/react-component-dispatch-event.js';\nimport __reactComponentSlots from '../runtime-helpers/react-component-slots.js';\nimport __reactComponentSetProps from '../runtime-helpers/react-component-set-props.js';\n\nvar F7Sheet =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(F7Sheet, _React$Component);\n\n  function F7Sheet(props, context) {\n    var _this;\n\n    _classCallCheck(this, F7Sheet);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(F7Sheet).call(this, props, context));\n    _this.__reactRefs = {};\n    return _this;\n  }\n\n  _createClass(F7Sheet, [{\n    key: \"onOpen\",\n    value: function onOpen(event) {\n      this.dispatchEvent('sheet:open sheetOpen', event);\n    }\n  }, {\n    key: \"onOpened\",\n    value: function onOpened(event) {\n      this.dispatchEvent('sheet:opened sheetOpened', event);\n    }\n  }, {\n    key: \"onClose\",\n    value: function onClose(event) {\n      this.dispatchEvent('sheet:close sheetClose', event);\n    }\n  }, {\n    key: \"onClosed\",\n    value: function onClosed(event) {\n      this.dispatchEvent('sheet:closed sheetClosed', event);\n    }\n  }, {\n    key: \"open\",\n    value: function open(animate) {\n      var self = this;\n      if (!self.$f7) return undefined;\n      return self.$f7.sheet.open(self.refs.el, animate);\n    }\n  }, {\n    key: \"close\",\n    value: function close(animate) {\n      var self = this;\n      if (!self.$f7) return undefined;\n      return self.$f7.sheet.close(self.refs.el, animate);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var self = this;\n      var fixedList = [];\n      var staticList = [];\n      var props = self.props;\n      var id = props.id,\n          style = props.style,\n          className = props.className;\n      var fixedTags;\n      fixedTags = 'navbar toolbar tabbar subnavbar searchbar messagebar fab list-index'.split(' ').map(function (tagName) {\n        return \"f7-\".concat(tagName);\n      });\n      var slotsDefault = self.slots.default;\n\n      if (slotsDefault && slotsDefault.length) {\n        slotsDefault.forEach(function (child) {\n          if (typeof child === 'undefined') return;\n          var isFixedTag = false;\n          {\n            var tag = child.type && (child.type.displayName || child.type.name);\n\n            if (!tag) {\n              return;\n            }\n\n            if (fixedTags.indexOf(tag) >= 0) {\n              isFixedTag = true;\n            }\n          }\n          if (isFixedTag) fixedList.push(child);else staticList.push(child);\n        });\n      }\n\n      var innerEl = React.createElement('div', {\n        className: 'sheet-modal-inner'\n      }, staticList);\n      var classes = Utils.classNames(className, 'sheet-modal', Mixins.colorClasses(props));\n      return React.createElement('div', {\n        ref: function ref(__reactNode) {\n          _this2.__reactRefs['el'] = __reactNode;\n        },\n        id: id,\n        style: style,\n        className: classes\n      }, fixedList, innerEl);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      var self = this;\n      if (self.f7Sheet) self.f7Sheet.destroy();\n      var el = self.refs.el;\n      if (!el) return;\n      el.removeEventListener('popup:open', self.onOpenBound);\n      el.removeEventListener('popup:opened', self.onOpenedBound);\n      el.removeEventListener('popup:close', self.onCloseBound);\n      el.removeEventListener('popup:closed', self.onClosedBound);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var self = this;\n      var el = self.refs.el;\n      if (!el) return;\n      self.onOpenBound = self.onOpen.bind(self);\n      self.onOpenedBound = self.onOpened.bind(self);\n      self.onCloseBound = self.onClose.bind(self);\n      self.onClosedBound = self.onClosed.bind(self);\n      el.addEventListener('sheet:open', self.onOpenBound);\n      el.addEventListener('sheet:opened', self.onOpenedBound);\n      el.addEventListener('sheet:close', self.onCloseBound);\n      el.addEventListener('sheet:closed', self.onClosedBound);\n      var props = self.props;\n      var opened = props.opened,\n          backdrop = props.backdrop,\n          closeByBackdropClick = props.closeByBackdropClick,\n          closeByOutsideClick = props.closeByOutsideClick;\n      var sheetParams = {\n        el: self.refs.el\n      };\n      var useDefaultBackdrop;\n      {\n        useDefaultBackdrop = typeof backdrop === 'undefined';\n        if ('closeByBackdropClick' in props) sheetParams.closeByBackdropClick = closeByBackdropClick;\n        if ('closeByOutsideClick' in props) sheetParams.closeByOutsideClick = closeByOutsideClick;\n      }\n      self.$f7ready(function (f7) {\n        if (useDefaultBackdrop) {\n          sheetParams.backdrop = f7.params.sheet && f7.params.sheet.backdrop !== undefined ? f7.params.sheet.backdrop : self.$theme.md;\n        } else {\n          sheetParams.backdrop = backdrop;\n        }\n\n        self.f7Sheet = self.$f7.sheet.create(sheetParams);\n\n        if (opened) {\n          self.f7Sheet.open(false);\n        }\n      });\n    }\n  }, {\n    key: \"dispatchEvent\",\n    value: function dispatchEvent(events) {\n      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n\n      return __reactComponentDispatchEvent.apply(void 0, [this, events].concat(args));\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var _this3 = this;\n\n      __reactComponentWatch(this, 'props.opened', prevProps, prevState, function (opened) {\n        var self = _this3;\n        if (!self.f7Sheet) return;\n\n        if (opened) {\n          self.f7Sheet.open();\n        } else {\n          self.f7Sheet.close();\n        }\n      });\n    }\n  }, {\n    key: \"slots\",\n    get: function get() {\n      return __reactComponentSlots(this.props);\n    }\n  }, {\n    key: \"refs\",\n    get: function get() {\n      return this.__reactRefs;\n    },\n    set: function set(refs) {}\n  }]);\n\n  return F7Sheet;\n}(React.Component);\n\n__reactComponentSetProps(F7Sheet, Object.assign({\n  id: [String, Number],\n  className: String,\n  style: Object,\n  opened: Boolean,\n  backdrop: Boolean,\n  closeByBackdropClick: Boolean,\n  closeByOutsideClick: Boolean\n}, Mixins.colorProps));\n\nF7Sheet.displayName = 'f7-sheet';\nexport default F7Sheet;","map":null,"metadata":{},"sourceType":"module"}