{"ast":null,"code":"import { createStore, applyMiddleware } from // compose\n'redux';\nimport reducers from './reducers';\nimport clientMiddleware from './middlewares/clientMiddleware';\nimport { composeWithDevTools } from 'redux-devtools-extension'; //import createLogger from 'redux-logger'\n//import createSagaMiddleware from 'redux-saga'\n//const logger = createLogger()\n//const sagaMiddleware = createSagaMiddleware()\n\nexport default function configureStore(client) {\n  var initialState = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  // Create the store with two middlewares\n  var middlewares = [clientMiddleware(client) //  sagaMiddleware\n  //, logger\n  ];\n  var enhancers = [applyMiddleware.apply(void 0, middlewares)];\n  var store = createStore(reducers, initialState, composeWithDevTools.apply(void 0, enhancers)); // Extensions\n  //store.runSaga = sagaMiddleware.run\n\n  store.asyncReducers = {}; // Async reducer registry\n\n  return store;\n}","map":{"version":3,"sources":["/Users/user/Documents/On Progress/gredu-v2-fe/src/redux-modules/create.js"],"names":["createStore","applyMiddleware","reducers","clientMiddleware","composeWithDevTools","configureStore","client","initialState","middlewares","enhancers","store","asyncReducers"],"mappings":"AAAA,SACEA,WADF,EAEEC,eAFF,QAGE;AACK,OAJP;AAKA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,gBAAP,MAA6B,gCAA7B;AACA,SAASC,mBAAT,QAAoC,0BAApC,C,CACA;AACA;AAEA;AACA;;AAEA,eAAe,SAASC,cAAT,CAAwBC,MAAxB,EAAmD;AAAA,MAAnBC,YAAmB,uEAAJ,EAAI;AAChE;AACA,MAAMC,WAAW,GAAG,CAClBL,gBAAgB,CAACG,MAAD,CADE,CAElB;AACA;AAHkB,GAApB;AAMA,MAAMG,SAAS,GAAG,CAChBR,eAAe,MAAf,SAAmBO,WAAnB,CADgB,CAAlB;AAIA,MAAME,KAAK,GAAGV,WAAW,CACvBE,QADuB,EAErBK,YAFqB,EAGrBH,mBAAmB,MAAnB,SAAuBK,SAAvB,CAHqB,CAAzB,CAZgE,CAkBhE;AACA;;AACAC,EAAAA,KAAK,CAACC,aAAN,GAAsB,EAAtB,CApBgE,CAoBvC;;AAEzB,SAAOD,KAAP;AACD","sourcesContent":["import {\n  createStore,\n  applyMiddleware,\n  // compose\n} from 'redux'\nimport reducers from './reducers'\nimport clientMiddleware from './middlewares/clientMiddleware';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n//import createLogger from 'redux-logger'\n//import createSagaMiddleware from 'redux-saga'\n\n//const logger = createLogger()\n//const sagaMiddleware = createSagaMiddleware()\n\nexport default function configureStore(client, initialState = {}) {\n  // Create the store with two middlewares\n  const middlewares = [\n    clientMiddleware(client)\n    //  sagaMiddleware\n    //, logger\n  ]\n\n  const enhancers = [\n    applyMiddleware(...middlewares)\n  ]\n\n  const store = createStore(\n    reducers\n    , initialState\n    , composeWithDevTools(...enhancers)\n  )\n\n  // Extensions\n  //store.runSaga = sagaMiddleware.run\n  store.asyncReducers = {} // Async reducer registry\n\n  return store\n}\n"]},"metadata":{},"sourceType":"module"}